{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/services/auth.service.ts","./src/app/auth/services/token-storage.service.ts","./src/app/cart/services/cart.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/products/services/products.service.ts","./src/app/services/snackbar.service.ts","./src/app/shared/components/snackbar/snackbar.component.ts","./src/app/shared/components/snackbar/snackbar.component.html","./src/app/shared/constants.ts","./src/app/shared/interceptors/auth-interceptor.service.ts","./src/app/shared/models/user.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'products', \n    loadChildren: ()=> import('./products/products.module').then(m => m.ProductsModule)\n  },\n  { path: 'cart', \n    loadChildren: () => import('./cart/cart.module').then(m=> m.CartModule) \n  },\n  {\n    path: 'auth',\n    loadChildren: ()=> import('./auth/auth.module').then(m=>m.AuthModule)\n  },\n  { \n      path: 'checkout', \n      loadChildren: () => import('./checkout/checkout.module').then(m => m.CheckoutModule)\n  },\n  { path: '', redirectTo: 'auth',pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Product } from './shared/models/product';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'eshopping';\n}\n","<app-header [title]=title></app-header>\n<div class=\"container\" style=\"padding-top: 15px;\">\n  <div class=\"row\">\n      <router-outlet></router-outlet>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { HttpClientModule, HTTP_INTERCEPTORS, HttpClientXsrfModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AuthInterceptor } from './shared/interceptors/auth-interceptor.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatIconModule} from '@angular/material/icon';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    MatCardModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatMenuModule,\n    MatIconModule,\n    // HttpClientXsrfModule.withOptions({\n    //   cookieName: 'XSRF-TOKEN',\n    //   headerName: 'X-XSRF-TOKEN'\n    // }),\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\nimport { User } from '../../shared/models/user';\r\nimport { AUTH_KEY, USER_API } from '../../shared/constants';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n    isLoggedIn = false;\r\n    errorMessage = '';\r\n    user: User = new User();\r\n    constructor(private http: HttpClient) {}\r\n\r\n    // Login with Basic authentication against database\r\n    // login(user: User) {\r\n    //     this.user = user;\r\n    //     const headers = new HttpHeaders(\r\n    //         { Authorization: 'Basic ' + btoa(user.username + ':' + user.password)}\r\n    //         );\r\n    //     return this.http.post<User>(USER_API + \"/login\", user, { headers, responseType: 'text' as 'json'})\r\n    //      .pipe(map(res => {\r\n    //          this.isLoggedIn = true;\r\n    //          this.user= JSON.parse(res as any) ;\r\n    //          return this.user;\r\n    //         //  sessionStorage.setItem(\"loggedInUser\", this.user);\r\n    //      },\r\n    //      catchError(err  => { \r\n    //         console.log(\"Invalid credentials\");\r\n    //         this.errorMessage = err.error.message;\r\n    //         this.isLoggedIn = false;\r\n    //         return throwError(\"Invalid credentials\");\r\n    //      })));\r\n    // }\r\n\r\n    login(user: User) {\r\n        this.user = user;\r\n        return this.http.post(USER_API + \"/login\", user, \r\n                        { reportProgress: true, responseType: 'text'})\r\n         .pipe(map(res => {\r\n             sessionStorage.setItem(AUTH_KEY, res)\r\n             this.isLoggedIn = true;\r\n         },\r\n         catchError(err  => { \r\n            console.log(\"Invalid credentials\");\r\n            this.errorMessage = err.error.message;\r\n            this.isLoggedIn = false;\r\n            return throwError(\"Invalid credentials\");\r\n         })));\r\n    }\r\n\r\n    signup(user: User) {\r\n        this.user = user;\r\n        return this.http.post(USER_API + \"/create\", user, \r\n                        { responseType: 'text'});\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(USER_API + \"/user/\" + id);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { AUTH_KEY } from '../../shared/constants';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n\r\n    saveToken(token: string) {\r\n        sessionStorage.removeItem(AUTH_KEY);\r\n        sessionStorage.setItem(AUTH_KEY, token);\r\n    }\r\n\r\n    getToken() {\r\n        const token =  sessionStorage.getItem(AUTH_KEY);\r\n        return token ? JSON.parse(token)[\"jwt\"] : null;\r\n    }\r\n\r\n    clearToken() {\r\n        sessionStorage.clear();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CartService {\r\n    items: number[] = [];\r\n \r\n    addToCart(productId: number) {\r\n        this.items.push(productId);\r\n    }\r\n\r\n    getCartItems(): number[] {\r\n        return this.items;\r\n    }\r\n }","import { Component, Input, OnInit } from '@angular/core';\r\nimport { CartService } from '../cart/services/cart.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../auth/services/auth.service';\r\nimport { ProductsService } from '../products/services/products.service';\r\n\r\n@Component({\r\n    selector: 'app-header',\r\n    templateUrl: './header.component.html',\r\n    styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit{\r\n    \r\n    constructor(public cartService: CartService,\r\n                private router: Router,\r\n                private aRoute: ActivatedRoute,\r\n                public authService: AuthService,\r\n                public productService: ProductsService) {}\r\n\r\n    ngOnInit() { }\r\n\r\n    getCartItems() {\r\n        this.router.navigate(['/cart']);\r\n    }\r\n\r\n    addProduct() {\r\n        this.router.navigate(['/products/edit-product/new'], { relativeTo: this.aRoute});\r\n    }\r\n\r\n    login() {\r\n        this.router.navigate(['auth/login'], { relativeTo: this.aRoute});\r\n    }\r\n\r\n    logout() {\r\n        window.sessionStorage.removeItem(\"loggedInUser\");\r\n        this.authService.isLoggedIn = false;\r\n        this.authService.user = null;\r\n        this.cartService.items = [];\r\n        this.router.navigate([\"auth/login\"]);\r\n    }\r\n}","<nav class=\"navbar navbar-expand-lg bg-primary\">\r\n  <div class=\"container\">\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" \r\n    data-target=\"#navbarTogglerDemo03\" \r\n    aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" \r\n    aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-bar navbar-kebab\"></span>\r\n    <span class=\"navbar-toggler-bar navbar-kebab\"></span>\r\n    <span class=\"navbar-toggler-bar navbar-kebab\"></span>\r\n    </button>\r\n    <div class=\"logo\">\r\n      <a routerLink=\"\" class=\"simple-text logo-mini\">\r\n          <div class=\"logo-image-small\">\r\n            <img src=\"assets/images/IMG_0069.JPG\">\r\n          </div>\r\n        </a>\r\n    </div>\r\n    <a class=\"navbar-brand\" style=\"color: azure;padding-left: 0.3125rem;\" routerLink=\"\">eShopping</a>\r\n\r\n    <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarTogglerDemo03\">\r\n      <ul class=\"navbar-nav mt-2 mt-lg-0 \">\r\n        <li class=\"nav-item\">\r\n          <form>\r\n            <div class=\"input-group no-border\">\r\n              <input class=\"form-control\" type=\"text\" id=\"search\" name=\"search\" autocomplete=\"off\" placeholder=\"Search...\"\r\n              [(ngModel)]=\"productService.searchTerm\">\r\n              <div class=\"input-group-append\">\r\n                <div class=\"input-group-text\">\r\n                  <i class=\"nc-icon nc-zoom-split\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </form>\r\n        </li>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        \r\n        <li class=\"nav-item\" *ngIf=\"authService.isLoggedIn\">\r\n          <div>\r\n            <a (click)=\"addProduct()\" style=\"cursor: pointer; color: black;\">\r\n              Add Product\r\n            </a>\r\n          </div>\r\n        </li>&nbsp;&nbsp;\r\n        <li class=\"nav-item\">\r\n          <div>\r\n            <a routerLink=\"/cart\"  routerLinkActive=\"active\" style=\"color: black;\">\r\n              <i class=\"fa fa-shopping-cart\">\r\n               <span class=\"mt-2\">\r\n                 {{ cartService.items.length }}\r\n                 </span>\r\n             </i>\r\n            </a>\r\n          </div>\r\n        </li>&nbsp;&nbsp;\r\n        <li class=\"nav-item\" *ngIf=\"!authService.isLoggedIn\">\r\n          <div>\r\n            <a (click)=\"login()\" style=\"cursor: pointer;color: black;\">\r\n              Login\r\n            </a>\r\n          </div>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"authService.isLoggedIn\">\r\n          <button mat-icon-button [matMenuTriggerFor]=\"menu\" \r\n          aria-label=\"Example icon-button with a menu\">\r\n            <mat-icon>account_circle</mat-icon>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button mat-menu-item>\r\n              <mat-icon>logout</mat-icon>\r\n              <span (click)=\"logout()\">Logout</span>\r\n            </button>\r\n          </mat-menu>\r\n        </li>&nbsp;&nbsp;&nbsp;&nbsp;\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>","import { Injectable } from '@angular/core';\r\nimport { of, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Product } from 'src/app/shared/models/product';\r\nimport { PRODUCTS_API } from 'src/app/shared/constants';\r\nimport { SnackBarService } from 'src/app/services/snackbar.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n\r\n    products: Product[] = [];\r\n    categories: string[] = [\"Books\", \"Electronics\", \"Groceries\"];\r\n    searchTerm;\r\n    isLoading = true;\r\n    constructor(private http: HttpClient,\r\n                private snackBarService: SnackBarService) { }\r\n\r\n    getProducts(): Observable<Product[]> {\r\n        if (this.products.length !== 0) {\r\n            return of(this.products);\r\n        }\r\n        return this.http.get<Product[]>(PRODUCTS_API, {reportProgress: true})\r\n            .pipe(map(data => {\r\n                this.products = data;\r\n                this.isLoading = false;\r\n                return this.products;\r\n            }));\r\n    }\r\n\r\n    getProduct(id: number): Product {\r\n        return this.products.find(product => {\r\n            return product.id === id\r\n        });\r\n    }\r\n\r\n    updateProduct(product: Product) {\r\n        this.isLoading = true;\r\n        this.http.put<Product>(PRODUCTS_API, product, { reportProgress: true})\r\n            .subscribe(data => {\r\n                let index = this.products.findIndex(prod => prod.id === product.id);\r\n                this.products[index] = product;\r\n                this.isLoading = false;\r\n                \r\n            });\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.isLoading = true;\r\n        this.http.post<Product>(PRODUCTS_API, product, { reportProgress: true})\r\n            .subscribe(data => {\r\n                this.isLoading = false;\r\n                this.products.push(data);\r\n                this.snackBarService.show(\"Product added successfully\");\r\n            });\r\n    }\r\n\r\n    deleteProduct(productId: number) {\r\n        let reqUrl = PRODUCTS_API + \"/\" + productId;\r\n        this.http.delete(reqUrl,\r\n            {\r\n              reportProgress: true\r\n            })\r\n            .subscribe(data => {\r\n                console.log(data);\r\n                this.products = this.products.filter(product => {\r\n                    return product.id !== productId;\r\n                })\r\n            });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { SnackbarComponent } from '../shared/components/snackbar/snackbar.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SnackBarService {\r\n    constructor(private _snackBar: MatSnackBar) {}\r\n\r\n    show(message: String) {\r\n        this._snackBar.openFromComponent(SnackbarComponent, {\r\n          data: { message: message, icon: \"check\" },\r\n          duration: 1000,\r\n        });\r\n      }\r\n}","import { Component, Inject } from '@angular/core';\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent{\n\n  constructor(\n    public snackBarRef: MatSnackBarRef<SnackbarComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: any\n  ) { }\n}\n","<div class=\"flex\">\n    <div class=\"data\">{{data.message}} <i class=\"fa fa-{{data.icon}} icon\" aria-hidden=\"true\"></i></div>\n  </div>","export const PRODUCTS_API = \"http://localhost:8080/onetravels/products\";\r\nexport const USER_API = \"http://localhost:8080/onetravels/auth\";\r\n\r\nexport const USER_KEY = \"auth-user\";\r\nexport const AUTH_KEY = \"auth-token\";\r\nexport const AUTHORIZATION = \"Authorization\";","import { \r\n        HttpInterceptor, \r\n        HttpRequest, \r\n        HttpHandler, \r\n        HttpEvent, \r\n        HttpXsrfTokenExtractor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AUTHORIZATION } from '../constants';\r\nimport { TokenStorageService } from '../../auth/services/token-storage.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private tokenExtractor: HttpXsrfTokenExtractor,\r\n                private tokenService: TokenStorageService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // For Cookie based XSRF Token Basic authentication\r\n        // const headerName = 'X-XSRF-TOKEN';\r\n        // let token = this.tokenExtractor.getToken() as string;\r\n\r\n        // Below code is for Jwt authentication\r\n        const token = this.tokenService.getToken();\r\n\r\n        // below code will be get executed after login\r\n        // because jwt token stored after login only\r\n        if (token) {\r\n            let newReq = req.clone({\r\n                headers: req.headers.set(AUTHORIZATION, \"Bearer \" + token)\r\n            });\r\n            return next.handle(newReq);\r\n        }\r\n        return next.handle(req);\r\n    }\r\n\r\n}","export class User {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    firstname: string;\r\n    lastname: string;\r\n    email: string;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}