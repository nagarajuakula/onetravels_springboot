{"version":3,"sources":["./src/app/auth/services/auth-guard.service.ts","./src/app/products/product-details/product-details.component.ts","./src/app/products/product-details/product-details.component.html","./src/app/products/product/product.component.ts","./src/app/products/product/product.component.html","./src/app/products/products-routing.module.ts","./src/app/products/products.module.ts","./src/app/products/products/products.component.ts","./src/app/products/products/products.component.html","./src/app/products/services/productResolver.service.ts"],"names":[],"mappings":"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","file":"products-products-module-es2015.js","sourcesContent":["import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n    constructor(private authService: AuthService,\r\n                private router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | import(\"@angular/router\").UrlTree | import(\"rxjs\").Observable<boolean | import(\"@angular/router\").UrlTree> | Promise<boolean | import(\"@angular/router\").UrlTree> {\r\n\r\n        if (!this.authService.isLoggedIn) {\r\n            return this.router.navigate([\"/auth/login\"], {\r\n                queryParams: {\r\n                    returnTo: state.url\r\n                }\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { ProductsService } from '../services/products.service';\r\nimport { Product } from 'src/app/shared/models/product';\r\nimport { CartService } from 'src/app/cart/services/cart.service';\r\nimport { AuthService } from 'src/app/auth/services/auth.service';\r\nimport { SnackBarService } from 'src/app/services/snackbar.service';\r\n\r\n@Component({\r\n    selector: 'app-product-details',\r\n    templateUrl: './product-details.component.html'\r\n}\r\n)\r\nexport class ProductDetailsComponent implements OnInit {\r\n\r\n    selectedProductId: number;\r\n    isFromCart = false;\r\n    isLoggedIn = false;\r\n    product: Product;\r\n\r\n    constructor(private router: Router,\r\n        private aroute: ActivatedRoute,\r\n        private authService: AuthService,\r\n        private productsService: ProductsService,\r\n        private cartService: CartService,\r\n        private snackBarService: SnackBarService) { }\r\n\r\n    ngOnInit() {\r\n        this.selectedProductId = +this.aroute.snapshot.params['id'];\r\n        this.aroute.snapshot.queryParams['fromCart'] ? this.isFromCart = true : this.isFromCart = false;\r\n        this.product = this.productsService.getProduct(this.selectedProductId);\r\n        this.isLoggedIn = this.authService.isLoggedIn;\r\n    }\r\n\r\n    addProductToCart(productId: number) {\r\n        this.cartService.addToCart(productId);\r\n        this.snackBarService.show(\"Product added to the cart\");\r\n    }\r\n\r\n    editProduct() {\r\n        this.router.navigate([\"../edit-product\", this.product.id], { relativeTo: this.aroute });\r\n    }\r\n\r\n    deleteProduct() {\r\n        this.productsService.deleteProduct(this.product.id);\r\n        this.snackBarService.show(\"Product deleted successfully\");\r\n    }\r\n\r\n    checkout() {\r\n        this.cartService.items.push(this.selectedProductId);\r\n        this.router.navigate([\"/checkout/checkout\"], { relativeTo: this.aroute});\r\n    }\r\n}","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-4\">\r\n            <img src=\"../../../assets/images/female.png\" class=\"card-img-top\" width=\"200px\" height=\"200px\"\r\n                    alt=\"...\">\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">Product Details</h5>\r\n                    <table class=\"table\" cellspacing=\"0\" style=\"max-height: 28px;\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th scope=\"row\">Name</th>\r\n                                <td>{{ product.name }}</td>\r\n                            </tr>\r\n                            <!-- <tr *ngIf=\"product.category === 'Books'\">\r\n                                <th scope=\"row\">Author</th>\r\n                                <td>{{ product.author }}</td>\r\n                            </tr> -->\r\n                            <tr>\r\n                                <th scope=\"row\">Description</th>\r\n                                <td>{{ product.description }}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">Price</th>\r\n                                <td>₹ {{ product.price }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-2\">\r\n            <button class=\"btn btn-primary\" style=\"width: 110px;\" \r\n            (click)=\"addProductToCart(product.id)\" *ngIf=\"!isFromCart\">Add to Cart</button>\r\n            <button class=\"btn btn-danger\" style=\"width: 110px;\"\r\n                (click)=\"checkout()\">Checkout</button>&nbsp;\r\n            <button class=\"btn btn-success\" style=\"width: 110px;\"\r\n                (click)=\"editProduct()\" *ngIf=\"isLoggedIn === true\">Edit</button>\r\n                <button class=\"btn btn-danger\" style=\"width: 110px;\"\r\n                (click)=\"deleteProduct()\"  *ngIf=\"isLoggedIn === true\">Delete</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Product } from 'src/app/shared/models/product';\nimport { ProductsService } from '../services/products.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  productForm: FormGroup;\n  product: Product;\n  editMode = false;\n\n  constructor(private router: Router,\n              private aRoute: ActivatedRoute,\n              public productService: ProductsService) { }\n\n  ngOnInit(): void {\n    let productId = +this.aRoute.snapshot.params['id'];\n    if(productId) {\n      this.editMode = true;\n      this.product = this.productService.getProduct(productId);\n    } else {\n      this.product = { id: 0, name: null, description: null, category: null, author: null, price: 0};\n    }\n\n    this.productForm = new FormGroup({\n      id: new FormControl(this.product.id),\n      name: new FormControl(this.product.name, [Validators.required]),\n      description: new FormControl(this.product.description, [Validators.required]),\n      category: new FormControl(this.product.category, [Validators.required]),\n      author: new FormControl(this.product.author),\n      price: new FormControl(this.product.price)\n    });\n  }\n\n  addOrEditProduct() {\n    if(this.editMode) {\n      this.productService.updateProduct(this.productForm.value);\n    } else {\n      this.productService.addProduct(this.productForm.value);\n    }\n    this.router.navigate([\"/\"], { relativeTo: this.aRoute});\n  }\n\n}\n","    <div class=\"col-xl-12\">\n        <h2> {{ editMode ? 'Update' : 'Add' }} Product </h2>\n        <form [formGroup]=\"productForm\" (ngSubmit)=\"addOrEditProduct()\"  role=\"form\">\n            <div class=\"form-group\">\n                <label for=\"name\">Name</label>&nbsp;\n                <input type=\"text\" class=\"form-control\" name=\"name\" id=\"name\"\n                formControlName=\"name\"\n                required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"description\">Description</label>&nbsp;\n                <input type=\"text\" class=\"form-control\" name=\"description\" id=\"description\"\n                formControlName=\"description\"\n                required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"category\">Category</label>&nbsp;\n                <select class=\"form-control\" id=\"category\" name=\"category\" \n                formControlName=\"category\" #category>\n                    <!-- <option value=\"\">Select Category</option> -->\n                    <option *ngFor=\"let category of productService.categories\" [ngValue]=\"category\">{{ category }}</option>\n                </select>\n            </div>\n            <div class=\"form-group\" *ngIf=\"productForm.get('category').value==='Books'\">\n                <label for=\"author\">Author</label>&nbsp;\n                <input type=\"text\" class=\"form-control\" name=\"author\" id=\"author\" \n                formControlName=\"author\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"price\">Price</label>&nbsp;\n                <input type=\"number\" class=\"form-control\" name=\"price\" id=\"price\" \n                formControlName=\"price\">\n            </div>\n            <div class=\"form-group\">\n                <button type=\"submit\" class=\"btn btn-primary\" >{{ editMode ? 'Update' : 'Add' }}</button>\n            </div>\n        </form>\n    </div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { ProductDetailsComponent } from './product-details/product-details.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { ProductResolver } from './services/productResolver.service';\r\nimport { AuthGuardService } from '../auth/services/auth-guard.service';\r\n\r\nconst productRoutes: Routes = [\r\n    { path: \"\", component: ProductsComponent },\r\n    {\r\n        path: \"edit-product/new\",\r\n        component: ProductComponent,\r\n        canActivate: [AuthGuardService]\r\n    },\r\n    {\r\n        path: \"edit-product/:id\", \r\n        component: ProductComponent,\r\n        canActivate: [AuthGuardService],\r\n        resolve: { product: ProductResolver }\r\n    },\r\n    {\r\n        path: \":id\",\r\n        component: ProductDetailsComponent,\r\n        resolve: { product: ProductResolver }\r\n    }\r\n];\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(productRoutes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class ProductsRoutingModule {\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ProductsComponent } from './products/products.component';\nimport { ProductsRoutingModule } from './products-routing.module'\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { ProductComponent } from './product/product.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    ProductsComponent,\n    ProductDetailsComponent,\n    ProductComponent,\n  ],\n  imports: [\n    CommonModule,\n    ProductsRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatSelectModule,\n    SharedModule\n  ],\n  providers: [  ]\n})\nexport class ProductsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { ProductsService } from '../services/products.service';\nimport { Product } from '../../shared/models/product';\nimport { CartService } from '../../cart/services/cart.service';\nimport { AuthService } from 'src/app/auth/services/auth.service';\nimport { SnackBarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  products: Product[] = [];\n  selectedCategory: string;\n  messageTitle = \"No Products found in this category\";\n  messageDescription = \"\";\n  goToMessage = \"Add Product\";\n  goToLink = \"/products/edit-product/new\";\n  \n  constructor(private router: Router,\n              private aRoute: ActivatedRoute,\n              public productsService: ProductsService,\n              private cartService: CartService,\n              public authService: AuthService,\n              private snackBarService: SnackBarService) { }\n\n  ngOnInit(): void {\n    this.selectedCategory = \"All\";\n      this.productsService.getProducts().subscribe(products => {\n        this.products = products;\n    });\n  }\n\n  goToProduct(productId: number) {\n    this.router.navigate(['../products/' + productId], { relativeTo: this.aRoute});\n  }\n\n  addProductToCart(productId: number) {\n    this.cartService.addToCart(productId);\n    this.snackBarService.show(\"Product added to cart\");\n  }\n\n  deleteProduct(productId: number) {\n    this.productsService.deleteProduct(productId);\n    this.snackBarService.show(\"Product deleted successfully\");\n}\n}\n","<div class=\"row\">\n  <div class=\"col-md-3\">\n    <mat-form-field>\n      <h4 for=\"category_select\">Category By:</h4>\n      <mat-select class=\"form-control\" name=\"selectedCategory\" disableRipple id=\"selectedCategory\"\n        [(ngModel)]=\"selectedCategory\">\n        <mat-option value=\"All\" selected>All</mat-option>\n        <mat-option *ngFor=\"let category of productsService.categories\" [value]=\"category\">{{category}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n  <div class=\"col-md-9\">\n    <div class=\"row row-cols-1 row-cols-md-4\" *ngIf=\"!productsService.isLoading; else elseBlock;\">\n      <div class=\"col-md-3\" style=\"padding-bottom: 15px;\"\n        *ngFor=\"let product of (products | searchByCategory:selectedCategory | search:productsService.searchTerm)\"\n        style=\"cursor: pointer\">\n        <mat-card>\n          <img mat-card-image src=\"assets/images/female.png\" width=\"200px\" height=\"200px\"\n            class=\"card-img-top\" alt=\"{{ product.name }}\" \n            (click)=\"goToProduct(product.id)\">\n          <mat-card-content (click)=\"goToProduct(product.id)\">\n            <h5 class=\"card-title\">{{ product.name }}</h5>\n          </mat-card-content>\n          <mat-card-actions>\n            <small class=\"text-muted\">₹ {{ product.price }}</small>&nbsp;&nbsp;\n            <span class=\"right\">\n              <a placement=\"top\" mdbTooltip=\"Quick Look\" container=\"body\" (click)=\"addProductToCart(product.id)\">\n                <i class=\"fa fa-shopping-cart\"></i>\n              </a>\n            </span>&nbsp;&nbsp;\n            <span class=\"right\" *ngIf=\"authService.isLoggedIn\">\n                  <a placement=\"top\" mdbTooltip=\"Delete Product\" container=\"body\"\n                      (click)=\"deleteProduct(product.id)\"><i class=\"fa fa-trash\"></i></a>\n              </span>\n          </mat-card-actions>\n        </mat-card>\n        <!-- <div class=\"card\" style=\"cursor: pointer;\">\n          <img src=\"../../../assets/images/female.png\" \n          class=\"card-img-top\" width=\"200px\" height=\"200px\" alt=\"...\"\n          (click)=\"goToProduct(product.id)\">\n          <div class=\"card-body\" (click)=\"goToProduct(product.id)\">\n            <h5 #title class=\"card-title\">{{ product.name }}</h5>\n            <p class=\"card-text\">{{ product.price }}</p>\n          </div>\n          <div class=\"card-footer\">\n            <span class=\"right\">\n              <a placement=\"top\" mdbTooltip=\"Quick Look\" container=\"body\"\n                  (click)=\"addProductToCart(product.id)\">\n                  <i class=\"fa fa-shopping-cart\"></i>\n              </a>\n          </span>&nbsp;&nbsp;\n          <span class=\"right\">\n            <a href=\"#\" class=\"btn btn-primary\">Buy</a>\n          </span>\n          </div>\n        </div> -->\n      </div>\n\n      <app-no-product-found \n        [title]=\"messageTitle\" \n        [description]=\"messageDescription\" \n        [goToLink]=\"goToLink\"\n        [goToMessage]=\"goToMessage\"\n        *ngIf=\"(products | searchByCategory:selectedCategory | search:productsService.searchTerm).length === 0\">\n      </app-no-product-found>\n    </div>\n    <ng-template #elseBlock>\n      <div class=\"row\" style=\"text-align: center\">\n        <div class=\"text-center\">\n            <div class=\"spinner-border text-primary\" role=\"status\">\n              <span class=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n    </div>\n    </ng-template>\n  </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { \r\n    RouterStateSnapshot, \r\n    ActivatedRouteSnapshot, \r\n    Resolve } from '@angular/router';\r\n\r\nimport { Product } from 'src/app/shared/models/product';\r\nimport { ProductsService } from './products.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { AUTH_KEY } from 'src/app/shared/constants';\r\nimport { AuthService } from 'src/app/auth/services/auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProductResolver implements Resolve<Product[]>{\r\n\r\n    constructor(private productService: ProductsService,\r\n                private authService: AuthService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Product[] | import(\"rxjs\").Observable<Product[]> | Promise<Product[]> {\r\n        // removing JWT Token incase we reload the page after login\r\n        if(!this.authService.isLoggedIn) {\r\n            sessionStorage.removeItem(AUTH_KEY);\r\n        }\r\n        if(this.productService.products.length !== 0) {\r\n            return this.productService.products;\r\n        }\r\n        return this.productService.getProducts()\r\n        .pipe(map(data => {\r\n            return data;\r\n        }));\r\n    }\r\n}"],"sourceRoot":"webpack:///"}