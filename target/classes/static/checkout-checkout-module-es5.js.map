{"version":3,"sources":["webpack:///src/app/checkout/billing-details/billing-details.component.ts","webpack:///src/app/checkout/billing-details/billing-details.component.html","webpack:///src/app/checkout/checkout-navbar/checkout-navbar.component.ts","webpack:///src/app/checkout/checkout-navbar/checkout-navbar.component.html","webpack:///src/app/checkout/checkout.component.ts","webpack:///src/app/checkout/checkout.component.html","webpack:///src/app/checkout/checkout.module.ts","webpack:///src/app/checkout/checkout.routing.module.ts","webpack:///src/app/checkout/products/products.component.ts","webpack:///src/app/checkout/products/products.component.html","webpack:///src/app/checkout/result/result.component.ts","webpack:///src/app/checkout/result/result.component.html","webpack:///src/app/checkout/services/checkout.guard.ts","webpack:///src/app/checkout/shipping-details/shipping-details.component.ts","webpack:///src/app/checkout/shipping-details/shipping-details.component.html"],"names":["UserDetails","BillingDetailsComponent","router","userDetails","userDetailsForm","firstName","required","lastName","email","address","address2","state","zip","navigate","outlets","checkOutlet","updateUserDetails","selector","templateUrl","CheckoutNavbarComponent","styleUrls","CheckoutComponent","CheckoutModule","declarations","imports","routes","path","component","canActivate","children","outlet","CheckoutRoutingModule","forChild","exports","ProductsComponent","cartService","productService","products","totalPrice","items","forEach","item","product","getProduct","push","price","ResultComponent","tax","id","date","Date","now","data","document","getElementById","downloadReceipt","CheckoutGuard","authService","route","isLoggedIn","length","queryParams","returnTo","providedIn","ShippingDetailsComponent","activatedRoute"],"mappings":"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","file":"checkout-checkout-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nexport class UserDetails {\r\n  firstName: string;\r\n  lastName: string;\r\n  email?: string;\r\n  address: string;\r\n  address2?: string;\r\n  state: string;\r\n  zip: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-billing-details',\r\n  templateUrl: './billing-details.component.html',\r\n})\r\nexport class BillingDetailsComponent implements OnInit {\r\n\r\n  userDetails: UserDetails;\r\n  userDetailsForm: FormGroup;\r\n  stateDetails: FormArray;\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userDetails = new UserDetails();\r\n\r\n    this.userDetailsForm = new FormGroup(\r\n      { \r\n        firstName: new FormControl(this.userDetails.firstName, Validators.required),\r\n        lastName: new FormControl(this.userDetails.lastName, Validators.required),\r\n        email: new FormControl(this.userDetails.email, Validators.required),\r\n        address: new FormControl(this.userDetails.address, Validators.required),\r\n        address2: new FormControl(this.userDetails.address2, Validators.required),\r\n        state: new FormControl(this.userDetails.state, Validators.required),\r\n        zip: new FormControl(this.userDetails.zip, Validators.required),\r\n    }\r\n    );\r\n  }\r\n\r\n  updateUserDetails() {\r\n    this.router.navigate(['checkout/checkout', { outlets: { checkOutlet: ['result'] } }]);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"container mt-3\">\r\n        <div class=\"col-md order-md-1\">\r\n          <h4 class=\"mb-3\">Billing Address</h4>\r\n          <form\r\n            class=\"needs-validation\"\r\n            [formGroup]=\"userDetailsForm\"\r\n            (ngSubmit)=\"updateUserDetails()\"\r\n          >\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6 mb-3\">\r\n                <label for=\"firstName\">First name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"firstName\"\r\n                  formControlName=\"firstName\"\r\n                  required\r\n                />\r\n                <div class=\"invalid-feedback\">\r\n                  Valid first name is required.\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6 mb-3\">\r\n                <label for=\"lastName\">Last name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"lastName\"\r\n                  formControlName=\"lastName\"\r\n                  name=\"lastName\"\r\n                  required\r\n                />\r\n                <div class=\"invalid-feedback\">\r\n                  Valid last name is required.\r\n                </div>\r\n              </div>\r\n            </div>\r\n      \r\n            <div class=\"mb-3\">\r\n              <label for=\"email\"\r\n                >Email\r\n                <span class=\"text-muted\">(Optional)</span>\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                id=\"email\"\r\n                formControlName=\"email\"\r\n                name=\"email\"\r\n              />\r\n              <div class=\"invalid-feedback\">\r\n                Please enter a valid email address for shipping updates.\r\n              </div>\r\n            </div>\r\n      \r\n            <div class=\"mb-3\">\r\n              <label for=\"address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"address\"\r\n                placeholder=\"1234 Main St\"\r\n                formControlName=\"address\"\r\n                name=\"address1\"\r\n                required\r\n              />\r\n              <div class=\"invalid-feedback\">\r\n                Please enter your shipping address.\r\n              </div>\r\n            </div>\r\n      \r\n            <div class=\"mb-3\">\r\n              <label for=\"address2\"\r\n                >Address 2\r\n                <span class=\"text-muted\">(Optional)</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"address2\"\r\n                placeholder=\"Apartment or suite\"\r\n                formControlName=\"address2\"\r\n                name=\"address2\"\r\n              />\r\n            </div>\r\n      \r\n            <div class=\"row\">\r\n              <!-- <div class=\"col-md-5 mb-3\">\r\n                <label for=\"country\">Country</label>\r\n                <select\r\n                  class=\"custom-select d-block w-100\"\r\n                  id=\"country\"\r\n                  required\r\n                  [(ngModel)]=\"userDetail.country\"\r\n                  name=\"country\"\r\n                >\r\n                  <option value=\"\">Choose...</option>\r\n                  <option>United States</option>\r\n                </select>\r\n                <div class=\"invalid-feedback\">\r\n                  Please select a valid country.\r\n                </div>\r\n              </div> -->\r\n              <div class=\"col-md-4 mb-3\">\r\n                <label for=\"state\">State</label>\r\n                <select\r\n                  class=\"custom-select d-block w-100\"\r\n                  id=\"state\"\r\n                  formControlName=\"state\"\r\n                  name=\"state\"\r\n                  required\r\n                >\r\n                  <option value=\"\">Choose...</option>\r\n                  <option>California</option>\r\n                </select>\r\n                <div class=\"invalid-feedback\">\r\n                  Please provide a valid state.\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-3 mb-3\">\r\n                <label for=\"zip\">Zip</label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"zip\"\r\n                  placeholder=\"\"\r\n                  formControlName=\"zip\"\r\n                  name=\"zip\"\r\n                  required\r\n                />\r\n                <div class=\"invalid-feedback\">\r\n                  Zip code required.\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr class=\"mb-4\" />\r\n            <button class=\"btn btn-primary btn-lg btn-block\" type=\"submit\">\r\n              Continue to checkout\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      \r\n  </div>\r\n  ","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-checkout-navbar\",\n  templateUrl: \"./checkout-navbar.component.html\",\n  styleUrls: [\"./checkout-navbar.component.css\"],\n})\nexport class CheckoutNavbarComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<h3 class=\"text-center\">Checking Out Products</h3>\n\n<div class=\"board-inner\" id=\"status-buttons\">\n  <ul class=\"nav nav-tabs\" id=\"myTab\">\n    <div class=\"liner\"></div>\n\n    <!-- circular user icon -->\n    <li id=\"productsTab\" style=\"margin: auto;\">\n      <a\n        [routerLink]=\"['./']\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n        data-toggle=\"tab\"\n        title=\"Product Summary\"\n      >\n        <span class=\"round-tabs one\">\n          <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>\n        </span>\n      </a>\n    </li>\n\n    <!-- circular tasks icon -->\n    <li id=\"shippingTab\" style=\"margin: auto;\">\n      <a\n        [routerLink]=\"['./',\n          { outlets: { checkOutlet: ['shipping-details'] } }\n        ]\"\n        routerLinkActive=\"active\"\n        data-toggle=\"tab\"\n        title=\"Shipping Details\"\n      >\n        <span class=\"round-tabs two\">\n          <i class=\"fa fa-truck\" aria-hidden=\"true\"></i>\n        </span>\n      </a>\n    </li>\n\n    <!-- circular home icon -->\n    <li id=\"billingTab\" style=\"margin: auto;\">\n      <a\n        [routerLink]=\"[\n          { outlets: { checkOutlet: ['billing-details'] } }\n        ]\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n        data-toggle=\"tab\"\n        title=\"Confirmation\"\n      >\n        <span class=\"round-tabs three\">\n          <i class=\"fa fa-check-circle\" aria-hidden=\"true\"></i>\n        </span>\n      </a>\n    </li>\n\n    <!-- circular ok icon -->\n    <li id=\"resultTab\" style=\"margin: auto;\">\n      <a\n        [routerLink]=\"[ { outlets: { checkOutlet: ['result'] } }]\"\n        routerLinkActive=\"active\"\n        data-toggle=\"tab\"\n        title=\"Payment\"\n      >\n        <span class=\"round-tabs four\">\n          <i class=\"fa fa-credit-card\" aria-hidden=\"true\"></i>\n        </span>\n      </a>\n    </li>\n  </ul>\n  <div class=\"clearfix\"></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-checkout',\r\n    templateUrl: './checkout.component.html'\r\n})\r\nexport class CheckoutComponent{\r\n\r\n}","<section>\r\n    <div class=\"container\">\r\n      <div class=\"board\">\r\n        <!-- Navigation Area (Circular Tabs) -->\r\n        <app-checkout-navbar></app-checkout-navbar>\r\n        <!-- End Navigation Area (Circular Tabs) -->\r\n  \r\n        <!-- Content Area -->\r\n        <div class=\"tab-content\">\r\n          <!-- Routed view  -->\r\n          <router-outlet name=\"checkOutlet\"></router-outlet>\r\n        </div>\r\n        <!-- End Content Area -->\r\n      </div>\r\n  \r\n      <!-- For Debugging: show our formData as it is being typed -->\r\n      <!-- <pre>{{ formData | json }}</pre> -->\r\n    </div>\r\n  </section>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { ShippingDetailsComponent } from './shipping-details/shipping-details.component';\r\nimport { CheckoutRoutingModule } from './checkout.routing.module';\r\nimport { CheckoutComponent } from './checkout.component';\r\nimport { CheckoutNavbarComponent } from './checkout-navbar/checkout-navbar.component';\r\nimport { BillingDetailsComponent } from './billing-details/billing-details.component';\r\nimport { ResultComponent } from './result/result.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CheckoutComponent,\r\n        CheckoutNavbarComponent,\r\n        ProductsComponent,\r\n        ShippingDetailsComponent,\r\n        BillingDetailsComponent,\r\n        ResultComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        CheckoutRoutingModule\r\n    ]\r\n})\r\nexport class CheckoutModule {}","import { Routes, RouterModule, Router } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ProductsComponent } from \"./products/products.component\";\r\nimport { ShippingDetailsComponent } from './shipping-details/shipping-details.component';\r\nimport { BillingDetailsComponent } from './billing-details/billing-details.component';\r\nimport { CheckoutComponent } from './checkout.component';\r\nimport { ResultComponent } from './result/result.component';\r\nimport { AuthGuardService } from '../auth/services/auth-guard.service';\r\nimport { CheckoutGuard } from './services/checkout.guard';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'checkout', \r\n        component: CheckoutComponent, \r\n        canActivate: [ CheckoutGuard ],\r\n        children: [\r\n            {\r\n                path: \"\",\r\n                component: ProductsComponent,\r\n                outlet: \"checkOutlet\",\r\n              },\r\n              {\r\n                path: \"shipping-details\",\r\n                component: ShippingDetailsComponent,\r\n                outlet: \"checkOutlet\",\r\n              },\r\n              {\r\n                path: \"billing-details\",\r\n                component: BillingDetailsComponent,\r\n                outlet: \"checkOutlet\",\r\n              },\r\n              {\r\n                path: \"result\",\r\n                component: ResultComponent,\r\n                outlet: \"checkOutlet\",\r\n              }\r\n        ]\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class CheckoutRoutingModule { }","import { Component, OnInit } from '@angular/core';\n\nimport { CartService } from '../../cart/services/cart.service';\nimport { ProductsService } from 'src/app/products/services/products.service';\nimport { Product } from 'src/app/shared/models/product';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n  products: Product[] = [];\n  totalPrice = 0;\n  constructor(public cartService: CartService,\n              private productService: ProductsService) {}\n\n    ngOnInit() {\n      this.cartService.items.forEach( item => {\n        let product = this.productService.getProduct(item);\n        this.products.push(product);\n        this.totalPrice += product.price});\n    }\n\n}\n","<div class=\"container\">\n    <ul class=\"list-group mb-3\">\n      <li\n        class=\"list-group-item d-flex justify-content-between lh-condensed\"\n        *ngFor=\"let product of products\"\n      >\n        <div>\n          <img\n            [src]=\"product.imageUrl\"\n            [alt]=\"product.name\"\n            width=\"150\"\n            height=\"100\"\n          />\n        </div>\n        <div style=\"padding: 10px;\">\n          <h6 class=\"my-0\">{{ product.title }}</h6>\n          <!-- <p>Product Seller : {{ product.productSeller }}</p> -->\n        </div>\n        <span class=\"text-muted\">₹ {{ product.price }}</span>\n      </li>\n      <hr />\n      <li class=\"list-group-item d-flex justify-content-between\">\n        <span>Total (INR)</span>\n        <strong>₹ {{ totalPrice }}</strong>\n      </li>\n    </ul>\n    <div class=\"float-right\">\n      <a\n        class=\"btn btn-default\"\n        [routerLink]=\"[\n          { outlets: { checkOutlet: ['shipping-details'] } }\n        ]\"\n        routerLinkActive=\"active\"\n        >Next</a\n      >\n    </div>\n  </div>\n  ","import { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\n// import * as jsPDF from 'jspdf';\n\nimport { Product } from \"../../shared/models/product\";\nimport { CartService } from 'src/app/cart/services/cart.service';\nimport { ProductsService } from 'src/app/products/services/products.service';\n\n@Component({\n  selector: \"app-result\",\n  templateUrl: \"./result.component.html\",\n  styleUrls: [\"./result.component.css\"],\n})\nexport class ResultComponent implements OnInit {\n  products: Product[] = [];\n  date: number;\n  totalPrice = 0;\n  tax = 6.4;\n  @ViewChild(\"receipt\") receipt: ElementRef;\n\n  constructor(private cartService: CartService,\n              private productService: ProductsService) {  }\n\n  ngOnInit() {\n    this.cartService.items.forEach(id => {\n      this.products.push(this.productService.getProduct(id));\n    })\n    \n    this.products.forEach((product) => {\n      this.totalPrice += product.price;\n    });\n\n    this.date = Date.now();\n  }\n\n  downloadReceipt() {\n    const data = document.getElementById(\"receipt\");\n\n    // let doc = new jsPDF('p','pt', 'a4');\n\n    // let handleElement = {\n    //   '#editor':function(element,renderer){\n    //     return true;\n    //   }\n    // };\n    // doc.fromHTML(data.innerHTML,15,15,{\n    //   'width': 200,\n    //   'elementHandlers': handleElement\n    // });\n\n    // doc.save('angular-demo.pdf');\n\n    \n    // console.log(data);\n\n    // html2canvas(data).then((canvas) => {\n    //   // Few necessary setting options\n    //   // const imgWidth = 208;\n    //   const pageHeight = 295;\n    //   // const imgHeight = (canvas.height * imgWidth) / canvas.width;\n\n    //   const contentDataURL = canvas.toDataURL(\"image/png\");\n    //   const pdf = new jsPDF(); // A4 size page of PDF\n    //   const position = 0;\n    //   const x_axis= 150;\n    //   const y_axis = 10;\n\n    //   console.log(this.receipt.nativeElement.offsetHeight);\n    //   const imgHeight = this.receipt.nativeElement.offsetHeight;\n    //   const imgWidth = this.receipt.nativeElement.offsetWidth;\n    //   pdf.addImage(contentDataURL, \"PNG\", x_axis, y_axis, imgWidth, imgHeight);\n    //   pdf.save(\"ikismail.pdf\"); // Generated PDF\n    // });\n  }\n}\n","<div class=\"mt-5 mb-5\" id=\"receipt\">\n    <a\n      name=\"\"\n      style=\"position: relative; float: right;\"\n      id=\"\"\n      class=\"btn btn-primary\"\n      href=\"javascript:;;\"\n      role=\"button\"\n      (click)=\"downloadReceipt()\"\n      ><i class=\"fa fa-download\"></i> Receipt</a\n    >\n  \n    <div class=\"row\" #receipt>\n      <div\n        class=\"well col-xs-10 col-sm-10 col-md-6 col-xs-offset-1 col-sm-offset-1 col-md-offset-3\"\n        style=\"margin: auto;\"\n      >\n        <div class=\"row\">\n          <div class=\"col-xs-6 col-sm-6 col-md-6\">\n            <address>\n              <strong>ikismail</strong>\n              <br />\n              Tamil Nadu, IN 600094\n              <br />\n              <abbr title=\"Phone\">P:</abbr> (+91) 8124794942\n            </address>\n          </div>\n          <div class=\"col-xs-6 col-sm-6 col-md-6 text-right\">\n            <p>\n              <em>Date: {{ date | date }}</em>\n            </p>\n            <p>\n              <em>Receipt #: 34522677W</em>\n            </p>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"text-center\">\n            <h1>Receipt</h1>\n          </div>\n          <table class=\"table table-hover\">\n            <thead>\n              <tr>\n                <th>Product</th>\n                <td></td>\n                <th class=\"text-center\">Price</th>\n                <th class=\"text-center\">Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let product of products\">\n                <td class=\"col-md-9\">\n                  <h6>\n                    <em>{{ product.title }}</em>\n                  </h6>\n                </td>\n                <td></td>\n                <td class=\"col-md-1 text-center\">₹ {{ product.price }}</td>\n                <td class=\"col-md-1 text-center\">₹ {{ product.price }}</td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td class=\"text-right\">\n                  <p>\n                    <strong>Subtotal: </strong>\n                  </p>\n                  <p>\n                    <strong>Tax: </strong>\n                  </p>\n                </td>\n                <td class=\"text-center\">\n                  <p>\n                    <strong>{{ totalPrice }}</strong>\n                  </p>\n                  <p>\n                    <strong>₹ {{ tax }}</strong>\n                  </p>\n                </td>\n              </tr>\n              <tr>\n                <td></td>\n                <td></td>\n                <td class=\"text-right\">\n                  <p><strong>Total: </strong></p>\n                </td>\n                <td class=\"text-center text-danger\">\n                  <h4>\n                    <strong>₹ {{ totalPrice + tax }}</strong>\n                  </h4>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <button type=\"button\" class=\"btn btn-success btn-lg btn-block\">\n            Pay Now <span class=\"glyphicon glyphicon-chevron-right\"></span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","import {\r\n    CanActivate,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot,\r\n    Router\r\n} from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { CartService } from '../../cart/services/cart.service';\r\nimport { AuthService } from '../../auth/services/auth.service';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CheckoutGuard implements CanActivate {\r\n    constructor(private authService: AuthService,\r\n        private cartService: CartService,\r\n        private router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | import(\"@angular/router\").UrlTree | import(\"rxjs\").Observable<boolean | import(\"@angular/router\").UrlTree> | Promise<boolean | import(\"@angular/router\").UrlTree> {\r\n\r\n        if (!this.authService.isLoggedIn) {\r\n            if (this.cartService.items.length !== 0) {\r\n                return this.router.navigate([\"/auth/login\"], {\r\n                    queryParams: {\r\n                        returnTo: \"/checkout/checkout\"\r\n                    }\r\n                });\r\n            } else {\r\n                return this.router.navigate([\"/\"]);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nexport class UserDetails {\n  firstName: string;\n  lastName: string;\n  email?: string;\n  address: string;\n  address2?: string;\n  state: string;\n  zip: number;\n}\n\n@Component({\n  selector: 'app-shipping-details',\n  templateUrl: './shipping-details.component.html',\n  styleUrls: ['./shipping-details.component.css']\n})\nexport class ShippingDetailsComponent implements OnInit {\n\n  userDetails: UserDetails;\n  userDetailsForm: FormGroup;\n  stateDetails: FormArray;\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.userDetails = new UserDetails();\n\n    this.userDetailsForm = new FormGroup(\n      { \n        firstName: new FormControl(this.userDetails.firstName, Validators.required),\n        lastName: new FormControl(this.userDetails.lastName, Validators.required),\n        email: new FormControl(this.userDetails.email, Validators.required),\n        address: new FormControl(this.userDetails.address, Validators.required),\n        address2: new FormControl(this.userDetails.address2, Validators.required),\n        state: new FormControl(this.userDetails.state, Validators.required),\n        zip: new FormControl(this.userDetails.zip, Validators.required),\n    }\n    );\n  }\n\n  updateUserDetails() {\n    this.router.navigate(['checkout/checkout', { outlets: { checkOutlet: ['billing-details'] } }]);\n  }\n}\n","<div class=\"container\">\n    <div class=\"container mt-3\">\n        <div class=\"col-md order-md-1\">\n          <h4 class=\"mb-3\">Shipping Address</h4>\n          <form\n            class=\"needs-validation\"\n            [formGroup]=\"userDetailsForm\"\n            (ngSubmit)=\"updateUserDetails()\"\n          >\n            <div class=\"row\">\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"firstName\">First name</label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"firstName\"\n                  formControlName=\"firstName\"\n                  required\n                />\n                <div class=\"invalid-feedback\">\n                  Valid first name is required.\n                </div>\n              </div>\n              <div class=\"col-md-6 mb-3\">\n                <label for=\"lastName\">Last name</label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"lastName\"\n                  formControlName=\"lastName\"\n                  name=\"lastName\"\n                  required\n                />\n                <div class=\"invalid-feedback\">\n                  Valid last name is required.\n                </div>\n              </div>\n            </div>\n      \n            <div class=\"mb-3\">\n              <label for=\"email\"\n                >Email\n                <span class=\"text-muted\">(Optional)</span>\n              </label>\n              <input\n                type=\"email\"\n                class=\"form-control\"\n                id=\"email\"\n                formControlName=\"email\"\n                name=\"email\"\n              />\n              <div class=\"invalid-feedback\">\n                Please enter a valid email address for shipping updates.\n              </div>\n            </div>\n      \n            <div class=\"mb-3\">\n              <label for=\"address\">Address</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"address\"\n                placeholder=\"1234 Main St\"\n                formControlName=\"address\"\n                name=\"address1\"\n                required\n              />\n              <div class=\"invalid-feedback\">\n                Please enter your shipping address.\n              </div>\n            </div>\n      \n            <div class=\"mb-3\">\n              <label for=\"address2\"\n                >Address 2\n                <span class=\"text-muted\">(Optional)</span>\n              </label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"address2\"\n                placeholder=\"Apartment or suite\"\n                formControlName=\"address2\"\n                name=\"address2\"\n              />\n            </div>\n      \n            <div class=\"row\">\n              <!-- <div class=\"col-md-5 mb-3\">\n                <label for=\"country\">Country</label>\n                <select\n                  class=\"custom-select d-block w-100\"\n                  id=\"country\"\n                  required\n                  [(ngModel)]=\"userDetail.country\"\n                  name=\"country\"\n                >\n                  <option value=\"\">Choose...</option>\n                  <option>United States</option>\n                </select>\n                <div class=\"invalid-feedback\">\n                  Please select a valid country.\n                </div>\n              </div> -->\n              <div class=\"col-md-4 mb-3\">\n                <label for=\"state\">State</label>\n                <select\n                  class=\"custom-select d-block w-100\"\n                  id=\"state\"\n                  formControlName=\"state\"\n                  name=\"state\"\n                  required\n                >\n                  <option value=\"\">Choose...</option>\n                  <option>California</option>\n                </select>\n                <div class=\"invalid-feedback\">\n                  Please provide a valid state.\n                </div>\n              </div>\n              <div class=\"col-md-3 mb-3\">\n                <label for=\"zip\">Zip</label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"zip\"\n                  placeholder=\"\"\n                  formControlName=\"zip\"\n                  name=\"zip\"\n                  required\n                />\n                <div class=\"invalid-feedback\">\n                  Zip code required.\n                </div>\n              </div>\n            </div>\n            <hr class=\"mb-4\" />\n            <button class=\"btn btn-primary btn-lg btn-block\" type=\"submit\">\n              Continue to checkout\n            </button>\n          </form>\n        </div>\n      </div>\n      \n  </div>\n  "]}