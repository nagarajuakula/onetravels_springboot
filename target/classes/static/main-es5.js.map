{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/services/auth.service.ts","webpack:///src/app/auth/services/token-storage.service.ts","webpack:///src/app/cart/services/cart.service.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/products/services/products.service.ts","webpack:///src/app/services/snackbar.service.ts","webpack:///src/app/shared/components/snackbar/snackbar.component.ts","webpack:///src/app/shared/components/snackbar/snackbar.component.html","webpack:///src/app/shared/constants.ts","webpack:///src/app/shared/interceptors/auth-interceptor.service.ts","webpack:///src/app/shared/models/user.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","ProductsModule","CartModule","AuthModule","CheckoutModule","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthService","http","isLoggedIn","errorMessage","user","post","reportProgress","responseType","pipe","res","sessionStorage","setItem","err","console","log","error","message","providedIn","TokenStorageService","token","removeItem","getItem","JSON","parse","clear","CartService","items","productId","push","HeaderComponent","cartService","router","aRoute","authService","productService","navigate","relativeTo","window","ProductsService","snackBarService","products","categories","isLoading","length","get","data","find","product","put","subscribe","index","findIndex","prod","show","reqUrl","filter","SnackBarService","_snackBar","openFromComponent","icon","duration","SnackbarComponent","snackBarRef","PRODUCTS_API","USER_API","USER_KEY","AUTH_KEY","AUTHORIZATION","AuthInterceptor","tokenExtractor","tokenService","next","getToken","newReq","clone","headers","set","handle","User","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'products', \n    loadChildren: ()=> import('./products/products.module').then(m => m.ProductsModule)\n  },\n  { path: 'cart', \n    loadChildren: () => import('./cart/cart.module').then(m=> m.CartModule) \n  },\n  {\n    path: 'auth',\n    loadChildren: ()=> import('./auth/auth.module').then(m=>m.AuthModule)\n  },\n  { \n      path: 'checkout', \n      loadChildren: () => import('./checkout/checkout.module').then(m => m.CheckoutModule)\n  },\n  { path: '', redirectTo: 'auth',pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Product } from './shared/models/product';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'eshopping';\n}\n","<app-header [title]=title></app-header>\n<div class=\"container\" style=\"padding-top: 15px;\">\n  <div class=\"row\">\n      <router-outlet></router-outlet>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { HttpClientModule, HTTP_INTERCEPTORS, HttpClientXsrfModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AuthInterceptor } from './shared/interceptors/auth-interceptor.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatIconModule} from '@angular/material/icon';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    MatCardModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    MatMenuModule,\n    MatIconModule,\n    // HttpClientXsrfModule.withOptions({\n    //   cookieName: 'XSRF-TOKEN',\n    //   headerName: 'X-XSRF-TOKEN'\n    // }),\n    AppRoutingModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\nimport { User } from '../../shared/models/user';\r\nimport { AUTH_KEY, USER_API } from '../../shared/constants';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n    isLoggedIn = false;\r\n    errorMessage = '';\r\n    user: User = new User();\r\n    constructor(private http: HttpClient) {}\r\n\r\n    // Login with Basic authentication against database\r\n    // login(user: User) {\r\n    //     this.user = user;\r\n    //     const headers = new HttpHeaders(\r\n    //         { Authorization: 'Basic ' + btoa(user.username + ':' + user.password)}\r\n    //         );\r\n    //     return this.http.post<User>(USER_API + \"/login\", user, { headers, responseType: 'text' as 'json'})\r\n    //      .pipe(map(res => {\r\n    //          this.isLoggedIn = true;\r\n    //          this.user= JSON.parse(res as any) ;\r\n    //          return this.user;\r\n    //         //  sessionStorage.setItem(\"loggedInUser\", this.user);\r\n    //      },\r\n    //      catchError(err  => { \r\n    //         console.log(\"Invalid credentials\");\r\n    //         this.errorMessage = err.error.message;\r\n    //         this.isLoggedIn = false;\r\n    //         return throwError(\"Invalid credentials\");\r\n    //      })));\r\n    // }\r\n\r\n    login(user: User) {\r\n        this.user = user;\r\n        return this.http.post(USER_API + \"/login\", user, \r\n                        { reportProgress: true, responseType: 'text'})\r\n         .pipe(map(res => {\r\n             sessionStorage.setItem(AUTH_KEY, res)\r\n             this.isLoggedIn = true;\r\n         },\r\n         catchError(err  => { \r\n            console.log(\"Invalid credentials\");\r\n            this.errorMessage = err.error.message;\r\n            this.isLoggedIn = false;\r\n            return throwError(\"Invalid credentials\");\r\n         })));\r\n    }\r\n\r\n    signup(user: User) {\r\n        this.user = user;\r\n        return this.http.post(USER_API + \"/create\", user, \r\n                        { responseType: 'text'});\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(USER_API + \"/user/\" + id);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { AUTH_KEY } from '../../shared/constants';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n\r\n    saveToken(token: string) {\r\n        sessionStorage.removeItem(AUTH_KEY);\r\n        sessionStorage.setItem(AUTH_KEY, token);\r\n    }\r\n\r\n    getToken() {\r\n        const token =  sessionStorage.getItem(AUTH_KEY);\r\n        return token ? JSON.parse(token)[\"jwt\"] : null;\r\n    }\r\n\r\n    clearToken() {\r\n        sessionStorage.clear();\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CartService {\r\n    items: number[] = [];\r\n \r\n    addToCart(productId: number) {\r\n        this.items.push(productId);\r\n    }\r\n\r\n    getCartItems(): number[] {\r\n        return this.items;\r\n    }\r\n }","import { Component, Input, OnInit } from '@angular/core';\r\nimport { CartService } from '../cart/services/cart.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../auth/services/auth.service';\r\nimport { ProductsService } from '../products/services/products.service';\r\n\r\n@Component({\r\n    selector: 'app-header',\r\n    templateUrl: './header.component.html',\r\n    styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit{\r\n    \r\n    constructor(public cartService: CartService,\r\n                private router: Router,\r\n                private aRoute: ActivatedRoute,\r\n                public authService: AuthService,\r\n                public productService: ProductsService) {}\r\n\r\n    ngOnInit() { }\r\n\r\n    getCartItems() {\r\n        this.router.navigate(['/cart']);\r\n    }\r\n\r\n    addProduct() {\r\n        this.router.navigate(['/products/edit-product/new'], { relativeTo: this.aRoute});\r\n    }\r\n\r\n    login() {\r\n        this.router.navigate(['auth/login'], { relativeTo: this.aRoute});\r\n    }\r\n\r\n    logout() {\r\n        window.sessionStorage.removeItem(\"loggedInUser\");\r\n        this.authService.isLoggedIn = false;\r\n        this.authService.user = null;\r\n        this.cartService.items = [];\r\n        this.router.navigate([\"auth/login\"]);\r\n    }\r\n}","<nav class=\"navbar navbar-expand-lg bg-primary\">\r\n  <div class=\"container\">\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" \r\n    data-target=\"#navbarTogglerDemo03\" \r\n    aria-controls=\"navbarTogglerDemo03\" aria-expanded=\"false\" \r\n    aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-bar navbar-kebab\"></span>\r\n    <span class=\"navbar-toggler-bar navbar-kebab\"></span>\r\n    <span class=\"navbar-toggler-bar navbar-kebab\"></span>\r\n    </button>\r\n    <div class=\"logo\">\r\n      <a routerLink=\"\" class=\"simple-text logo-mini\">\r\n          <div class=\"logo-image-small\">\r\n            <img src=\"assets/images/IMG_0069.JPG\">\r\n          </div>\r\n        </a>\r\n    </div>\r\n    <a class=\"navbar-brand\" style=\"color: azure;padding-left: 0.3125rem;\" routerLink=\"\">eShopping</a>\r\n\r\n    <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarTogglerDemo03\">\r\n      <ul class=\"navbar-nav mt-2 mt-lg-0 \">\r\n        <li class=\"nav-item\">\r\n          <form>\r\n            <div class=\"input-group no-border\">\r\n              <input class=\"form-control\" type=\"text\" id=\"search\" name=\"search\" autocomplete=\"off\" placeholder=\"Search...\"\r\n              [(ngModel)]=\"productService.searchTerm\">\r\n              <div class=\"input-group-append\">\r\n                <div class=\"input-group-text\">\r\n                  <i class=\"nc-icon nc-zoom-split\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </form>\r\n        </li>&nbsp;&nbsp;&nbsp;&nbsp;\r\n        \r\n        <li class=\"nav-item\" *ngIf=\"authService.isLoggedIn\">\r\n          <div>\r\n            <a (click)=\"addProduct()\" style=\"cursor: pointer; color: black;\">\r\n              Add Product\r\n            </a>\r\n          </div>\r\n        </li>&nbsp;&nbsp;\r\n        <li class=\"nav-item\">\r\n          <div>\r\n            <a routerLink=\"/cart\"  routerLinkActive=\"active\" style=\"color: black;\">\r\n              <i class=\"fa fa-shopping-cart\">\r\n               <span class=\"mt-2\">\r\n                 {{ cartService.items.length }}\r\n                 </span>\r\n             </i>\r\n            </a>\r\n          </div>\r\n        </li>&nbsp;&nbsp;\r\n        <li class=\"nav-item\" *ngIf=\"!authService.isLoggedIn\">\r\n          <div>\r\n            <a (click)=\"login()\" style=\"cursor: pointer;color: black;\">\r\n              Login\r\n            </a>\r\n          </div>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"authService.isLoggedIn\">\r\n          <button mat-icon-button [matMenuTriggerFor]=\"menu\" \r\n          aria-label=\"Example icon-button with a menu\">\r\n            <mat-icon>account_circle</mat-icon>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button mat-menu-item>\r\n              <mat-icon>logout</mat-icon>\r\n              <span (click)=\"logout()\">Logout</span>\r\n            </button>\r\n          </mat-menu>\r\n        </li>&nbsp;&nbsp;&nbsp;&nbsp;\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>","import { Injectable } from '@angular/core';\r\nimport { of, Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Product } from 'src/app/shared/models/product';\r\nimport { PRODUCTS_API } from 'src/app/shared/constants';\r\nimport { SnackBarService } from 'src/app/services/snackbar.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n\r\n    products: Product[] = [];\r\n    categories: string[] = [\"Books\", \"Electronics\", \"Groceries\"];\r\n    searchTerm;\r\n    isLoading = true;\r\n    constructor(private http: HttpClient,\r\n                private snackBarService: SnackBarService) { }\r\n\r\n    getProducts(): Observable<Product[]> {\r\n        if (this.products.length !== 0) {\r\n            return of(this.products);\r\n        }\r\n        return this.http.get<Product[]>(PRODUCTS_API, {reportProgress: true})\r\n            .pipe(map(data => {\r\n                this.products = data;\r\n                this.isLoading = false;\r\n                return this.products;\r\n            }));\r\n    }\r\n\r\n    getProduct(id: number): Product {\r\n        return this.products.find(product => {\r\n            return product.id === id\r\n        });\r\n    }\r\n\r\n    updateProduct(product: Product) {\r\n        this.isLoading = true;\r\n        this.http.put<Product>(PRODUCTS_API, product, { reportProgress: true})\r\n            .subscribe(data => {\r\n                let index = this.products.findIndex(prod => prod.id === product.id);\r\n                this.products[index] = product;\r\n                this.isLoading = false;\r\n                \r\n            });\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.isLoading = true;\r\n        this.http.post<Product>(PRODUCTS_API, product, { reportProgress: true})\r\n            .subscribe(data => {\r\n                this.isLoading = false;\r\n                this.products.push(data);\r\n                this.snackBarService.show(\"Product added successfully\");\r\n            });\r\n    }\r\n\r\n    deleteProduct(productId: number) {\r\n        let reqUrl = PRODUCTS_API + \"/\" + productId;\r\n        this.http.delete(reqUrl,\r\n            {\r\n              reportProgress: true\r\n            })\r\n            .subscribe(data => {\r\n                console.log(data);\r\n                this.products = this.products.filter(product => {\r\n                    return product.id !== productId;\r\n                })\r\n            });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { SnackbarComponent } from '../shared/components/snackbar/snackbar.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SnackBarService {\r\n    constructor(private _snackBar: MatSnackBar) {}\r\n\r\n    show(message: String) {\r\n        this._snackBar.openFromComponent(SnackbarComponent, {\r\n          data: { message: message, icon: \"check\" },\r\n          duration: 1000,\r\n        });\r\n      }\r\n}","import { Component, Inject } from '@angular/core';\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent{\n\n  constructor(\n    public snackBarRef: MatSnackBarRef<SnackbarComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: any\n  ) { }\n}\n","<div class=\"flex\">\n    <div class=\"data\">{{data.message}} <i class=\"fa fa-{{data.icon}} icon\" aria-hidden=\"true\"></i></div>\n  </div>","export const PRODUCTS_API = \"http://localhost:8080/onetravels/products\";\r\nexport const USER_API = \"http://localhost:8080/onetravels/auth\";\r\n\r\nexport const USER_KEY = \"auth-user\";\r\nexport const AUTH_KEY = \"auth-token\";\r\nexport const AUTHORIZATION = \"Authorization\";","import { \r\n        HttpInterceptor, \r\n        HttpRequest, \r\n        HttpHandler, \r\n        HttpEvent, \r\n        HttpXsrfTokenExtractor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AUTHORIZATION } from '../constants';\r\nimport { TokenStorageService } from '../../auth/services/token-storage.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private tokenExtractor: HttpXsrfTokenExtractor,\r\n                private tokenService: TokenStorageService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // For Cookie based XSRF Token Basic authentication\r\n        // const headerName = 'X-XSRF-TOKEN';\r\n        // let token = this.tokenExtractor.getToken() as string;\r\n\r\n        // Below code is for Jwt authentication\r\n        const token = this.tokenService.getToken();\r\n\r\n        // below code will be get executed after login\r\n        // because jwt token stored after login only\r\n        if (token) {\r\n            let newReq = req.clone({\r\n                headers: req.headers.set(AUTHORIZATION, \"Bearer \" + token)\r\n            });\r\n            return next.handle(newReq);\r\n        }\r\n        return next.handle(req);\r\n    }\r\n\r\n}","export class User {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    firstname: string;\r\n    lastname: string;\r\n    email: string;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}